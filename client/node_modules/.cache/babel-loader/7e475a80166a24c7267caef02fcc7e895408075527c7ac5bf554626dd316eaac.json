{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useWebSocket = (url, username) => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const socket = new WebSocket(url);\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      socket.send(JSON.stringify({\n        type: 'setUsername',\n        username\n      }));\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'playerList') {\n        setPlayers(data.players);\n      } else if (data.type === 'lobbyMessage') {\n        setMessage(data.message);\n      } else if (data.type === 'challengeReceived') {\n        setMessage(`Challenge received from ${data.challenger}`);\n      } else if (data.type === 'gameStarted') {\n        setMessage(`Game started with ${data.opponent}`);\n      } else if (data.type === 'challengeDeclined') {\n        setMessage(`${data.challenger} declined your challenge.`);\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    setWs(socket);\n    return () => {\n      socket.close();\n    };\n  }, [url, username]);\n  const sendMessage = msg => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify(msg));\n    }\n  };\n  return {\n    players,\n    message,\n    sendMessage\n  };\n};\n_s(useWebSocket, \"g4Irhoc4GLCgZfNJhBG/f1P55A4=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useState","useWebSocket","url","username","_s","ws","setWs","players","setPlayers","message","setMessage","socket","WebSocket","onopen","console","log","send","JSON","stringify","type","onmessage","event","data","parse","challenger","opponent","onclose","close","sendMessage","msg","readyState","OPEN"],"sources":["/Users/sophiacastiglione/Desktop/iste442/dots-and-boxes/client/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useWebSocket = (url, username) => {\n    const [ws, setWs] = useState(null);\n    const [players, setPlayers] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        const socket = new WebSocket(url);\n\n        socket.onopen = () => {\n            console.log('WebSocket connected');\n            socket.send(JSON.stringify({ type: 'setUsername', username }));\n        };\n\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            if (data.type === 'playerList') {\n                setPlayers(data.players);\n            } else if (data.type === 'lobbyMessage') {\n                setMessage(data.message);\n            } else if (data.type === 'challengeReceived') {\n                setMessage(`Challenge received from ${data.challenger}`);\n            } else if (data.type === 'gameStarted') {\n                setMessage(`Game started with ${data.opponent}`);\n            } else if (data.type === 'challengeDeclined') {\n                setMessage(`${data.challenger} declined your challenge.`);\n            }\n        };\n\n        socket.onclose = () => {\n            console.log('WebSocket disconnected');\n        };\n\n        setWs(socket);\n\n        return () => {\n            socket.close();\n        };\n    }, [url, username]);\n\n    const sendMessage = (msg) => {\n        if (ws && ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify(msg));\n        }\n    };\n\n    return { players, message, sendMessage };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAG,IAAIC,SAAS,CAACV,GAAG,CAAC;IAEjCS,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCJ,MAAM,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEhB;MAAS,CAAC,CAAC,CAAC;IAClE,CAAC;IAEDQ,MAAM,CAACS,SAAS,GAAIC,KAAK,IAAK;MAC1B,MAAMC,IAAI,GAAGL,IAAI,CAACM,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACH,IAAI,KAAK,YAAY,EAAE;QAC5BX,UAAU,CAACc,IAAI,CAACf,OAAO,CAAC;MAC5B,CAAC,MAAM,IAAIe,IAAI,CAACH,IAAI,KAAK,cAAc,EAAE;QACrCT,UAAU,CAACY,IAAI,CAACb,OAAO,CAAC;MAC5B,CAAC,MAAM,IAAIa,IAAI,CAACH,IAAI,KAAK,mBAAmB,EAAE;QAC1CT,UAAU,CAAC,2BAA2BY,IAAI,CAACE,UAAU,EAAE,CAAC;MAC5D,CAAC,MAAM,IAAIF,IAAI,CAACH,IAAI,KAAK,aAAa,EAAE;QACpCT,UAAU,CAAC,qBAAqBY,IAAI,CAACG,QAAQ,EAAE,CAAC;MACpD,CAAC,MAAM,IAAIH,IAAI,CAACH,IAAI,KAAK,mBAAmB,EAAE;QAC1CT,UAAU,CAAC,GAAGY,IAAI,CAACE,UAAU,2BAA2B,CAAC;MAC7D;IACJ,CAAC;IAEDb,MAAM,CAACe,OAAO,GAAG,MAAM;MACnBZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAEDT,KAAK,CAACK,MAAM,CAAC;IAEb,OAAO,MAAM;MACTA,MAAM,CAACgB,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,EAAE,CAACzB,GAAG,EAAEC,QAAQ,CAAC,CAAC;EAEnB,MAAMyB,WAAW,GAAIC,GAAG,IAAK;IACzB,IAAIxB,EAAE,IAAIA,EAAE,CAACyB,UAAU,KAAKlB,SAAS,CAACmB,IAAI,EAAE;MACxC1B,EAAE,CAACW,IAAI,CAACC,IAAI,CAACC,SAAS,CAACW,GAAG,CAAC,CAAC;IAChC;EACJ,CAAC;EAED,OAAO;IAAEtB,OAAO;IAAEE,OAAO;IAAEmB;EAAY,CAAC;AAC5C,CAAC;AAACxB,EAAA,CA9CIH,YAAY;AAgDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}